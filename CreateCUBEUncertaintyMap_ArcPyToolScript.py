# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# CreateCUBEUncertaintyMap_ModelBuilderArcPyTemplate.py
# Created on: 2021-09-30 11:57:26.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: CreateCUBEUncertaintyMap_ModelBuilderArcPyTemplate <Lake_Name> <Output_QA_Geodatabase> <QA_Folder> <MB_Extent_Polygon> <Final_Bathy_Points_Shapefile> <Map_Resolution__meters_>
# Description: This tool produces a CUBE Uncertainty raster from the Final Bathy Points dataset.
# ---------------------------------------------------------------------------

# Script arguments
Lake_Name = arcpy.GetParameterAsText(0)
Output_QA_Geodatabase = arcpy.GetParameterAsText(1)
Final_xyz_map_thinned_points = arcpy.GetParameterAsText(2)
QA_Folder = arcpy.GetParameterAsText(3)
MB_Extent_Polygon = arcpy.GetParameterAsText(4)
Map_Resolution = arcpy.GetParameterAsText(5)
if Map_Resolution == '#' or not Map_Resolution:
    Map_Resolution = "0.5" # provide a default value if unspecified

# Local variables:
MBextentRaster = Output_QA_Geodatabase + "\\"+ Lake_Name + "_MBextentRaster"
CUBEUncertInterp = Output_QA_Geodatabase + "\\"+ Lake_Name + "_CUBEUncertInterp"
CUBEUncertraster = QA_Folder + "\\" + Lake_Name + "_CUBEUncertraster.tif"

# Process: Polygon to Raster
arcpy.AddField_management(MB_Extent_Polygon, "FID1", "SHORT")
arcpy.CalculateField_management(MB_Extent_Polygon, "FID1", "0")
arcpy.PolygonToRaster_conversion(MB_Extent_Polygon, "FID1", MBextentRaster, "CELL_CENTER", "NONE", "0.5")

# Process: Natural Neighbor
arcpy.AddMessage("Interpolating the CUBE_Uncert field between the Map=1 points...")
arcpy.NaturalNeighbor_3d(Final_xyz_map_thinned_points, "CUBE_Uncert", CUBEUncertInterp, Map_Resolution)

# Process: Con
arcpy.AddMessage("Removing excess pixels outside of the MBpoly extent...")
arcpy.gp.Con_sa(MBextentRaster, CUBEUncertInterp, CUBEUncertraster, "", "\"VALUE\"=0")

