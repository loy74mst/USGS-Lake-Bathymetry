# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# CreateVerticalAccuracyMap_ModelBuilderArcPyTemplate.py
# Created on: 2021-09-30 13:27:54.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: CreateVerticalAccuracyMap_ModelBuilderArcPyTemplate <Lake_Name> <Output_QA_Geodatabase> <QA_Folder> <MB_Extent_Polygon> <Map_Resolution__meters_> <TINQAselect_Feature_Class>
# Description:This tool produces a Vertical Accuracy raster from the Final Bathy Points dataset. The vertical accuracy is the difference between the elevation of the unthinned multibeam point and the TIN elevation.
# ---------------------------------------------------------------------------


# Script arguments
Output_QA_Geodatabase = arcpy.GetParameterAsText(0)
QA_Folder = arcpy.GetParameterAsText(1)
Lake_Name = arcpy.GetParameterAsText(2)
TINQAselect = arcpy.GetParameterAsText(3)
MB_Extent_Polygon = arcpy.GetParameterAsText(4)
Map_Resolution = arcpy.GetParameterAsText(5)
if Map_Resolution == '#' or not Map_Resolution:
    Map_Resolution= "0.5" # provide a default value if unspecified

# Local variables:
MBextentRaster = Output_QA_Geodatabase + "\\" + Lake_Name + "_MBextentRaster"
VAinterp = Output_QA_Geodatabase + "\\" + Lake_Name + "_VAInterp"
VAraster = QA_Folder + "\\" + Lake_Name + "_VARaster.tif"

# Process: Polygon to Raster --> Converting the MBpoly to a raster in case it hasn't been done already
arcpy.AddField_management(MB_Extent_Polygon, "FID1", "SHORT")
arcpy.CalculateField_management(MB_Extent_Polygon, "FID1", "0")
arcpy.PolygonToRaster_conversion(MB_Extent_Polygon, "FID1", MBextentRaster, "CELL_CENTER", "NONE", "0.5")

# Process: Add Field --> Adding the difference field to the QA points
arcpy.AddMessage("Adding the 'Difference' field to the QA points feature class and computing Z_MBelev - Z...")
arcpy.AddField_management(TINQAselect, "Difference", "DOUBLE", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Calculate Field --> Computing the difference between the MB elevation and the TIN elevation
arcpy.CalculateField_management(TINQAselect, "Difference", "[Z_MBelev] - [Z]", "VB", "")

# Process: Natural Neighbor --> Interpolating the points to produce a raster with the map resolution
arcpy.NaturalNeighbor_3d(TINQAselect, "Difference", VAinterp, Map_Resolution)

# Process: Con --> Removing excess pixels outside of the MBpoly extent
arcpy.AddMessage("Removing excess pixels outside of the MBpoly extent...")
arcpy.gp.Con_sa(MBextentRaster, VAinterp, VAraster, "", "\"VALUE\"=0")

